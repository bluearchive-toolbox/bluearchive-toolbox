{"version":3,"sources":["components/Test/Test.module.scss","components/Test/Test.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Character","character","Object","keys","map","key","Test","useState","index","setIndex","className","styles","wrapper","list","characters","element","onClick","DevName","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mHACAA,EAAOC,QAAU,CAAC,QAAU,sBAAsB,KAAO,mBAAmB,QAAU,wB,w2hYC2BhFC,EAAY,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,UAEnB,OACE,8BAEIC,OAAOC,KAAKF,GAAWG,KAAI,SAACC,GAAD,OACzB,gCAAiBA,EAAjB,MAA2BJ,EAAUI,KAA3BA,SAOLC,EArCF,SAAC,GAAY,qBACEC,oBAAU,GADb,mBAChBC,EADgB,KACTC,EADS,KAGvB,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,qBAAKF,UAAWC,IAAOE,KAAvB,SAEIC,EAAWV,KAAI,SAACH,EAAgBO,GAAjB,OACb,qBAAKE,UAAWC,IAAOI,QAASC,QAAS,kBAAMP,EAASD,IAAxD,SACIP,EAAUgB,eAKpB,qBAAKP,UAAWC,IAAOV,UAAvB,SAEIa,EAAWN,IACX,cAAC,EAAD,CAAWP,UAAWa,EAAWN,WCX5BU,MANf,WACE,OACE,cAAC,EAAD,KCQWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.89a48aca.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Test_wrapper__2yjUT\",\"list\":\"Test_list__2zQqw\",\"element\":\"Test_element__3FFHa\"};","import React, { useState } from 'react';\nimport styles from './Test.module.scss';\nimport characters from '../../assets/jsons/characters.json';\n\nconst Test = ({}: {}) => {\n  const [index, setIndex] = useState(-1);\n\n  return(\n    <div className={styles.wrapper}>\n      <div className={styles.list}>\n        {\n          characters.map((character: any, index: number) =>\n            <div className={styles.element} onClick={() => setIndex(index)}>\n              { character.DevName }\n            </div>\n          )\n        }\n      </div>\n      <div className={styles.character}>\n        {\n          characters[index] &&\n          <Character character={characters[index]} />\n        }\n      </div>\n    </div>\n  )\n};\n\nconst Character = ({ character } : { character: any }) => {\n\n  return(\n    <div>\n      {\n        Object.keys(character).map((key) =>\n          <div key={key}>{ key } : { character[key] }</div>\n        )\n      }\n    </div>\n  )\n};\n\nexport default Test;","import React from 'react';\nimport './App.css';\nimport Test from \"./components/Test/Test\";\n\nfunction App() {\n  return (\n    <Test />\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}